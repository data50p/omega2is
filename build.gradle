group 'com.femtioprocent'
version '2.0.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'application'

mainClassName = 'omega.appl.Omega_IS'

sourceCompatibility = 1.8
targetCompatibility = 1.8

configurations {
    antTask
    javac2
}

File outputFile = file("src/main/resources/version")
 
def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyy-MM-dd HH:mm:ss')
    return formattedDate
}

task generateVersionFile {
    doLast {
        if (true || !outputFile.isFile()) {
            outputFile.parentFile.mkdirs()
            outputFile.createNewFile()
        }
        outputFile.write "Version: $version\n" + "Date: " + getDate() + "\n"
    }
}

generateVersionFile.inputs.property "version", version
generateVersionFile.outputs.files outputFile
generateVersionFile.outputs.upToDateWhen { false }
 
task showContents {
    doLast {
        println outputFile.text
    }
}

showContents.dependsOn generateVersionFile
processResources.dependsOn showContents

repositories {
    flatDir dirs: "${rootDir}/lib"
    flatDir dirs: "lib"
    mavenCentral()
}

task runApp(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = project.mainClassName
    workingDir file('runtime')
}

run {
    workingDir file('runtime')
}

//task customrun {
    //javaexec {project.mainClassName}
//}

task debug(dependsOn: classes, type: JavaExec) {
    main = project.mainClassName
    classpath = sourceSets.main.runtimeClasspath
    standardInput = System.in
    workingDir file('runtime')
    ignoreExitValue = true
    debug = true
}

//ant.importBuild 'build.xml'
//task compileJava(overwrite: true, dependsOn: customcompile) {
//}

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.11'
    compile fileTree(dir: 'jar', include: '*.jar')
    compile 'com.intellij:forms_rt:7.0.3'
    compile 'de.codecentric.centerdevice:centerdevice-nsmenufx:2.1.4'
    antTask name: 'javac2'//, version: '12.1.0'
    antTask name: 'forms_rt'//, version: '12.1.0'
    antTask name: 'asm-all'//, version: '12.1.0-idea'
    antTask group: 'org.jdom', name: 'jdom', version: '1.1'
}

sourceSets {
    main {
        resources {
            srcDirs = ["src/main/resources"]
        }
    }
}

jar {
    manifest {
        attributes(
                "Class-Path": configurations.compile.collect { it.getName() }.join(' '),
                "Main-Class": project.mainClassName
        )
    }
    from configurations.compile.collect { entry -> zipTree(entry) }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
publishing {
    repositories {
        maven {
            // change to point to your repo, e.g. http://my.org/repo
            url "$buildDir/repo"
        }
    }
}

task compileJava(overwrite: true, dependsOn: configurations.compile.getTaskDependencyFromProjectDependency(true, 'jar')) {
    doLast {
        project.sourceSets.main.output.classesDir.mkdirs()
        ant.taskdef name: 'javac2', classname: 'com.intellij.ant.Javac2', classpath: configurations.antTask.asPath
        ant.javac2 srcdir: project.sourceSets.main.java.srcDirs.join(':'),
                classpath: project.sourceSets.main.compileClasspath.asPath,
                destdir: project.sourceSets.main.output.classesDir,
                source: sourceCompatibility,
                target: targetCompatibility,
                includeAntRuntime: false
    }
}
