package omega;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;

public class ShowLicense extends JDialog {
    private JPanel contentPane;
    private JButton buttonOK;
    private JButton buttonCancel;
    private JTextArea textArea1;
    String s = "Licence Agreement\n" +
	    "Please review the licence terms before installing Omega-is.\n" +
	    "Copyright (C) 2004 The Omega-is Group:\n" +
	    "Heimann, Lundälv, Tjus, Nelson\n" +
	    "Topic Dos Hb, Meloton Hb, Tomas Tjus Psykologbyrå SuperImpact Images Inc.\n" +
	    "All rights reserved.\n" +
	    "This software is provided as-is, without any express or implied warranty.\n" +
	    "In no event will the authors or suppliers be held liable for any damages\n" +
	    "arising from the use of this software. Warning: This computer program is\n" +
	    "protected by copyright law and international treaties.\n" +
	    "Unauthorized reproduction or distribution of this program, or any portion\n" +
	    "of it may result in severe civil and criminal penalties, and will be\n" +
	    "prosecuted to the maximum extent as possible under law.\n" +
	    "Title, ownership rights, and intellectual property rights in and to the\n" +
	    "software shall remain with The Omega-is Group.  You agree to abide by the\n" +
	    "copyright law and all other applicable including, but not limited to,\n" +
	    "export control laws.  You acknowledge that the software in source code form remains\n" +
	    "a confidential trade secret of The Omega-is Group and therefore you agree\n" +
	    "not to modify the software\n" +
	    "or attempt to decipher, decompile, disassemble or reverse engineer the software,\n" +
	    "except to the extent&#xa;applicable laws specifically prohibit such restriction.\n" +
	    "--------------------------------------------------\n" +
	    "If you accept all the terms of the agreement, choose I accept... to continue.\n" +
	    "You must accept the agreement to install Omega-is.";

    Boolean accepted = null;

    public ShowLicense() {
	try {
	    setContentPane(contentPane);
	    setModal(true);
	    getRootPane().setDefaultButton(buttonOK);

	    textArea1.append(s);
	    buttonOK.addActionListener(new ActionListener() {
		public void actionPerformed(ActionEvent e) {
		    onOK();
		}
	    });

	    buttonCancel.addActionListener(new ActionListener() {
		public void actionPerformed(ActionEvent e) {
		    onCancel();
		}
	    });

	    // call onCancel() when cross is clicked
	    setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
	    addWindowListener(new WindowAdapter() {
		public void windowClosing(WindowEvent e) {
		    onCancel();
		}
	    });

	    // call onCancel() on ESCAPE
	    contentPane.registerKeyboardAction(new ActionListener() {
		public void actionPerformed(ActionEvent e) {
		    onCancel();
		}
	    }, KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);
	} catch (Exception ex) {

	}
    }

    private void onOK() {
	accepted = true;
	dispose();
    }

    private void onCancel() {
	accepted = false;
	dispose();
    }

    public static void main(String[] args) {
	ShowLicense dialog = new ShowLicense();
	dialog.pack();
	dialog.setVisible(true);
	System.exit(0);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
	$$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
	contentPane = new JPanel();
	contentPane.setLayout(new GridLayoutManager(3, 1, new Insets(10, 10, 10, 10), -1, -1));
	final JPanel panel1 = new JPanel();
	panel1.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
	contentPane.add(panel1, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, 1, null, null, null, 0, false));
	final JPanel panel2 = new JPanel();
	panel2.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1, true, false));
	panel1.add(panel2, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
	buttonOK = new JButton();
	buttonOK.setText("Yes");
	panel2.add(buttonOK, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
	buttonCancel = new JButton();
	buttonCancel.setText("No");
	panel2.add(buttonCancel, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
	final JLabel label1 = new JLabel();
	label1.setText("Do you accept the license ?");
	panel1.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
	final JPanel panel3 = new JPanel();
	panel3.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
	contentPane.add(panel3, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(24, 314), null, 0, false));
	textArea1 = new JTextArea();
	panel3.add(textArea1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
	final JLabel label2 = new JLabel();
	label2.setText("License");
	contentPane.add(label2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
	return contentPane;
    }
}
